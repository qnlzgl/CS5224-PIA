{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSensor = undefined;\n\nvar _debounce = require('../debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar createSensor = exports.createSensor = function createSensor(element) {\n  // 感应器\n  var sensor = undefined; // callback\n\n  var listeners = [];\n  /**\n   * 统一触发 listeners\n   */\n\n  var resizeListener = (0, _debounce2.default)(function () {\n    // 依次触发执行\n    listeners.forEach(function (listener) {\n      listener(element);\n    });\n  });\n  /**\n   * 创建 sensor 的 object DOM\n   * @returns {HTMLObjectElement}\n   */\n\n  var newSensor = function newSensor() {\n    var sensor = new ResizeObserver(resizeListener); // 监听 element\n\n    sensor.observe(element); // 直接触发一次\n\n    resizeListener();\n    return sensor;\n  };\n  /**\n   * 监听某一个 callback\n   * @param cb\n   */\n\n\n  var bind = function bind(cb) {\n    if (!sensor) {\n      sensor = newSensor();\n    }\n\n    if (listeners.indexOf(cb) === -1) {\n      listeners.push(cb);\n    }\n  };\n  /**\n   * 完全 destroy\n   */\n\n\n  var destroy = function destroy() {\n    sensor.disconnect();\n    listeners = [];\n    sensor = undefined;\n  };\n  /**\n   * 取消绑定\n   * @param cb\n   */\n\n\n  var unbind = function unbind(cb) {\n    var idx = listeners.indexOf(cb);\n\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    } // 不存在 listener，并且存在 sensor object\n    // 则移除 object\n\n\n    if (listeners.length === 0 && sensor) {\n      destroy();\n    }\n  };\n\n  return {\n    element: element,\n    bind: bind,\n    destroy: destroy,\n    unbind: unbind\n  };\n};\n/**\n * Created by hustcc on 18/7/5.\n * Contract: i@hust.cc\n */","map":null,"metadata":{},"sourceType":"script"}