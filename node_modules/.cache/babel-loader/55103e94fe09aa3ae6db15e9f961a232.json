{"ast":null,"code":"import _classCallCheck from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/dudu/Desktop/ReactApp/my-app/src/Results.js\";\nimport React, { Component } from \"react\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Icon from \"react-fontawesome\";\nimport ResultsStrength from \"./ResultsStrength\";\nimport ResultsSummary from \"./ResultsSummary\";\nimport ResultsBigFive from \"./ResultsBigFive\";\nimport ResultsNeeds from \"./ResultsNeeds\";\nimport ResultsValues from \"./ResultsValues\";\nimport ResultsConsumerPref from \"./ResultsConsumerPref\"; //import echarts from \"echarts\";\n\nvar Results =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Results, _Component);\n\n  function Results(props) {\n    var _this;\n\n    _classCallCheck(this, Results);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Results).call(this, props));\n    _this.state = {\n      warnings: {},\n      wordCount: null,\n      activeTab: \"1\",\n      sourceModal: false\n    };\n    _this.toggleTabs = _this.toggleTabs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Results, [{\n    key: \"toggleTabs\",\n    value: function toggleTabs(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState({\n        sourceModal: !this.state.sourceModal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"results-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        size: \"sm\",\n        onClick: this.props.tryAgain.bind(this),\n        className: \"btn-try-again\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"repeat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), \" Try Again\"), React.createElement(ResultsStrength, {\n        wordCount: this.props.resultData[\"word_count\"],\n        warnings: this.props.resultData[\"warnings\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(ResultsSummary, {\n        resultData: this.props.resultData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"raw-text-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center source-text-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        size: \"sm\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Show source text (\", this.props.resultData[\"word_count\"], \" words analysed)\")), React.createElement(Modal, {\n        isOpen: this.state.sourceModal,\n        toggle: this.toggleModal,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Source Text\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.props.rawText), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Close\")))), React.createElement(Nav, {\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: this.state.activeTab === \"1\" ? \"active\" : \"\",\n        onClick: function onClick() {\n          _this2.toggleTabs(\"1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"The Big 5\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: this.state.activeTab === \"2\" ? \"active\" : \"\",\n        onClick: function onClick() {\n          _this2.toggleTabs(\"2\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Needs\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: this.state.activeTab === \"3\" ? \"active\" : \"\",\n        onClick: function onClick() {\n          _this2.toggleTabs(\"3\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Values\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: this.state.activeTab === \"4\" ? \"active\" : \"\",\n        onClick: function onClick() {\n          _this2.toggleTabs(\"4\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Consumer Preferences\"))), React.createElement(TabContent, {\n        activeTab: this.state.activeTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tabId: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(ResultsBigFive, {\n        resultData: this.props.resultData[\"personality\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tabId: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(ResultsNeeds, {\n        resultData: this.props.resultData[\"needs\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tabId: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(ResultsValues, {\n        resultData: this.props.resultData[\"values\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tabId: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(ResultsConsumerPref, {\n        resultData: this.props.resultData[\"consumption_preferences\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Results;\n}(Component);\n\nexport default Results;","map":{"version":3,"sources":["/Users/dudu/Desktop/ReactApp/my-app/src/Results.js"],"names":["React","Component","TabContent","TabPane","Nav","NavItem","NavLink","Button","Modal","ModalHeader","ModalBody","ModalFooter","Icon","ResultsStrength","ResultsSummary","ResultsBigFive","ResultsNeeds","ResultsValues","ResultsConsumerPref","Results","props","state","warnings","wordCount","activeTab","sourceModal","toggleTabs","bind","toggleModal","tab","setState","tryAgain","resultData","rawText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport Icon from \"react-fontawesome\";\nimport ResultsStrength from \"./ResultsStrength\";\nimport ResultsSummary from \"./ResultsSummary\";\nimport ResultsBigFive from \"./ResultsBigFive\";\nimport ResultsNeeds from \"./ResultsNeeds\";\nimport ResultsValues from \"./ResultsValues\";\nimport ResultsConsumerPref from \"./ResultsConsumerPref\";\n\n//import echarts from \"echarts\";\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      warnings: {},\n      wordCount: null,\n      activeTab: \"1\",\n      sourceModal: false\n    };\n\n    this.toggleTabs = this.toggleTabs.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleTabs(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  toggleModal() {\n    this.setState({\n      sourceModal: !this.state.sourceModal\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"results-wrapper\">\n        <Button\n          color=\"secondary\"\n          size=\"sm\"\n          onClick={this.props.tryAgain.bind(this)}\n          className=\"btn-try-again\"\n        >\n          <Icon name=\"repeat\" /> Try Again\n        </Button>\n        <ResultsStrength\n          wordCount={this.props.resultData[\"word_count\"]}\n          warnings={this.props.resultData[\"warnings\"]}\n        />\n\n        <ResultsSummary resultData={this.props.resultData} />\n        <div className=\"raw-text-modal\">\n          <div className=\"text-center source-text-btn\">\n            <Button color=\"secondary\" size=\"sm\" onClick={this.toggleModal}>\n              Show source text ({this.props.resultData[\"word_count\"]} words\n              analysed)\n            </Button>\n          </div>\n          <Modal\n            isOpen={this.state.sourceModal}\n            toggle={this.toggleModal}\n            size=\"lg\"\n          >\n            <ModalHeader toggle={this.toggleModal}>Source Text</ModalHeader>\n            <ModalBody>{this.props.rawText}</ModalBody>\n            <ModalFooter>\n              <Button color=\"secondary\" onClick={this.toggleModal}>\n                Close\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={this.state.activeTab === \"1\" ? \"active\" : \"\"}\n              onClick={() => {\n                this.toggleTabs(\"1\");\n              }}\n            >\n              The Big 5\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={this.state.activeTab === \"2\" ? \"active\" : \"\"}\n              onClick={() => {\n                this.toggleTabs(\"2\");\n              }}\n            >\n              Needs\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={this.state.activeTab === \"3\" ? \"active\" : \"\"}\n              onClick={() => {\n                this.toggleTabs(\"3\");\n              }}\n            >\n              Values\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={this.state.activeTab === \"4\" ? \"active\" : \"\"}\n              onClick={() => {\n                this.toggleTabs(\"4\");\n              }}\n            >\n              Consumer Preferences\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <ResultsBigFive resultData={this.props.resultData[\"personality\"]} />\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <ResultsNeeds resultData={this.props.resultData[\"needs\"]} />\n          </TabPane>\n          <TabPane tabId=\"3\">\n            <ResultsValues resultData={this.props.resultData[\"values\"]} />\n          </TabPane>\n          <TabPane tabId=\"4\">\n            <ResultsConsumerPref\n              resultData={this.props.resultData[\"consumption_preferences\"]}\n            />\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}