{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeSensor = exports.getSensor = undefined;\n\nvar _id = require('./id');\n\nvar _id2 = _interopRequireDefault(_id);\n\nvar _sensors = require('./sensors');\n\nvar _constant = require('./constant');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * all the sensor objects.\n * 传感器池子\n */\n\n\nvar Sensors = {};\n/**\n * 获取 sensor\n * @param element\n * @returns {*}\n */\n\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nvar getSensor = exports.getSensor = function getSensor(element) {\n  var sensorId = element.getAttribute(_constant.SizeSensorId); // 1. 已经存在，则直接取这个 sensor\n\n  if (sensorId && Sensors[sensorId]) {\n    return Sensors[sensorId];\n  } // 2. 不存在则创建\n\n\n  var newId = (0, _id2.default)();\n  element.setAttribute(_constant.SizeSensorId, newId);\n  var sensor = (0, _sensors.createSensor)(element); // 添加到池子中\n\n  Sensors[newId] = sensor;\n  return sensor;\n};\n/**\n * 移除 sensor\n * @param sensor\n */\n\n\nvar removeSensor = exports.removeSensor = function removeSensor(sensor) {\n  var sensorId = sensor.element.getAttribute(_constant.SizeSensorId); // 移除 attribute\n\n  sensor.element.removeAttribute(_constant.SizeSensorId); // 移除 sensor 对应的 事件 和 dom 结构\n\n  sensor.destroy(); // 存在则从 pool 中移除\n\n  if (sensorId && Sensors[sensorId]) {\n    delete Sensors[sensorId];\n  }\n};","map":null,"metadata":{},"sourceType":"script"}