{"ast":null,"code":"import _classCallCheck from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dudu/Desktop/ReactApp/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/dudu/Desktop/ReactApp/my-app/src/ResultsValues.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row } from \"reactstrap\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { convertToPercentage } from \"./helper\";\n\nvar ResultsValues =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResultsValues, _Component);\n\n  function ResultsValues(props) {\n    var _this;\n\n    _classCallCheck(this, ResultsValues);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResultsValues).call(this, props));\n    _this.getOtion = _this.getOtion.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ResultsValues, [{\n    key: \"getOtion\",\n    value: function getOtion() {\n      var option = {\n        tooltip: {},\n        scale: false,\n        radar: {\n          name: {\n            textStyle: {\n              color: \"#fff\",\n              fontSize: 16\n            }\n          },\n          shape: \"circle\",\n          indicator: [{\n            name: this.props.resultData[0][\"name\"],\n            max: 100\n          }, {\n            name: this.props.resultData[1][\"name\"],\n            max: 100\n          }, {\n            name: this.props.resultData[2][\"name\"],\n            max: 100\n          }, {\n            name: this.props.resultData[3][\"name\"],\n            max: 100\n          }, {\n            name: this.props.resultData[4][\"name\"],\n            max: 100\n          }]\n        },\n        series: [{\n          name: \"Values\",\n          type: \"radar\",\n          symbolSize: \"10\",\n          areaStyle: {\n            normal: {\n              opacity: 0.3\n            }\n          },\n          data: [{\n            value: [convertToPercentage(this.props.resultData[0][\"percentile\"]), convertToPercentage(this.props.resultData[1][\"percentile\"]), convertToPercentage(this.props.resultData[2][\"percentile\"]), convertToPercentage(this.props.resultData[3][\"percentile\"]), convertToPercentage(this.props.resultData[4][\"percentile\"])]\n          }]\n        }]\n      };\n      return option;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"plot-wrapper plot-wrapper-values\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"plot-contents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"12\",\n        md: \"12\",\n        sm: \"12\",\n        xs: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Values\"), React.createElement(ReactEcharts, {\n        option: this.getOtion(),\n        style: {\n          width: \"100%\",\n          height: 600\n        },\n        className: \"react_for_echarts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"plot-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Values describe motivating factors that influence the author's decision-making. The following table describes the five values that the service infers.\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Self-transcendence\"), \" Show concern for the welfare and interests of others.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Conservation\"), \" Emphasize self-restriction, order, and resistance to change.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Hedonism\"), \" Seek pleasure and sensuous gratification for themselves.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Self-enhancement\"), \" Seek personal success for themselves.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Open to change\"), \" Emphasize independent action, thought, and feeling, as well as a readiness for new experiences.\"))))));\n    }\n  }]);\n\n  return ResultsValues;\n}(Component);\n\nexport default ResultsValues;","map":{"version":3,"sources":["/Users/dudu/Desktop/ReactApp/my-app/src/ResultsValues.js"],"names":["React","Component","Col","Row","ReactEcharts","convertToPercentage","ResultsValues","props","getOtion","bind","option","tooltip","scale","radar","name","textStyle","color","fontSize","shape","indicator","resultData","max","series","type","symbolSize","areaStyle","normal","opacity","data","value","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Row } from \"reactstrap\";\n\nimport ReactEcharts from \"echarts-for-react\";\nimport { convertToPercentage } from \"./helper\";\n\nclass ResultsValues extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getOtion = this.getOtion.bind(this);\n  }\n\n  getOtion() {\n    const option = {\n      tooltip: {},\n      scale: false,\n      radar: {\n        name: {\n          textStyle: {\n            color: \"#fff\",\n            fontSize: 16\n          }\n        },\n        shape: \"circle\",\n        indicator: [\n          {\n            name: this.props.resultData[0][\"name\"],\n            max: 100\n          },\n          { name: this.props.resultData[1][\"name\"], max: 100 },\n          { name: this.props.resultData[2][\"name\"], max: 100 },\n          { name: this.props.resultData[3][\"name\"], max: 100 },\n          { name: this.props.resultData[4][\"name\"], max: 100 }\n        ]\n      },\n      series: [\n        {\n          name: \"Values\",\n          type: \"radar\",\n          symbolSize: \"10\",\n          areaStyle: {\n            normal: {\n              opacity: 0.3\n            }\n          },\n          data: [\n            {\n              value: [\n                convertToPercentage(this.props.resultData[0][\"percentile\"]),\n                convertToPercentage(this.props.resultData[1][\"percentile\"]),\n                convertToPercentage(this.props.resultData[2][\"percentile\"]),\n                convertToPercentage(this.props.resultData[3][\"percentile\"]),\n                convertToPercentage(this.props.resultData[4][\"percentile\"])\n              ]\n            }\n          ]\n        }\n      ]\n    };\n\n    return option;\n  }\n  render() {\n    return (\n      <div className=\"plot-wrapper plot-wrapper-values\">\n        <Row className=\"plot-contents\">\n          <Col lg=\"12\" md=\"12\" sm=\"12\" xs=\"12\">\n            <h1 className=\"text-center\">Values</h1>\n            <ReactEcharts\n              option={this.getOtion()}\n              style={{ width: \"100%\", height: 600 }}\n              className=\"react_for_echarts\"\n            />\n            <div className=\"plot-description\">\n              <p className=\"lead\">\n                Values describe motivating factors that influence the author's\n                decision-making. The following table describes the five values\n                that the service infers.\n              </p>\n              <ul>\n                <li>\n                  <strong>Self-transcendence</strong> Show concern for the\n                  welfare and interests of others.\n                </li>\n                <li>\n                  <strong>Conservation</strong> Emphasize self-restriction,\n                  order, and resistance to change.\n                </li>\n                <li>\n                  <strong>Hedonism</strong> Seek pleasure and sensuous\n                  gratification for themselves.\n                </li>\n                <li>\n                  <strong>Self-enhancement</strong> Seek personal success for\n                  themselves.\n                </li>\n                <li>\n                  <strong>Open to change</strong> Emphasize independent action,\n                  thought, and feeling, as well as a readiness for new\n                  experiences.\n                </li>\n              </ul>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default ResultsValues;\n"]},"metadata":{},"sourceType":"module"}